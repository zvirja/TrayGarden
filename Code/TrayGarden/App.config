<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="trayGarden" type="TrayGarden.Configuration.SectionHandler, TrayGarden"/>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>

  <trayGarden>

    <modernFactory type="TrayGarden.Configuration.ModernFactory, TrayGarden"/>

    <gardenbed type="TrayGarden.Plants.Gardenbed" singleton="true">
      <Initialize hint="invoke">
        <plantWorkhourses type="newlist:System.Object"/>
      </Initialize>
    </gardenbed>


    <!-- Resource manager, which is implemented to get resource by key from assemblies -->
    <resourceManager type="TrayGarden.Resources.MultisourceResourcesManager" singleton="true">
      <Sources hint="addlist">
        <templates>
          <simpleSource>
            <source type="TrayGarden.Resources.AssemblySource">
              <Initialize hint="invoke">
                <AssemblyName>{assembly}</AssemblyName>
                <ResourcePath>{path}</ResourcePath>
              </Initialize>
            </source>
          </simpleSource>
        </templates>

        <!-- DEFINE RESOURCE SOURCES HERE -->
        <items templateXPath="simpleSource">
          <source assembly="TrayGarden" path="TrayGarden.Resources.GlobalResources"/>
        </items>
      </Sources>
    </resourceManager>

    <pipelineManager type="TrayGarden.Pipelines.Engine.PipelineManager" singleton="true">
      <Initialize hint="invoke">
        <pipelines type="newlist:TrayGarden.Pipelines.Engine.Pipeline">
          <templates>
            <!-- A bit complicated template for providing Sitecore style pipelines defitions -->
            <sitecoreStyle>
              <pipeline type="TrayGarden.Pipelines.Engine.Pipeline">
                <Initialize hint="invoke">
                  <argumentType type="typeOf:{argType}"/>
                  <name>{name}</name>
                  <processors type="newlist:TrayGarden.Pipelines.Engine.Processor">
                    <templates>
                      <simpleProcessor>
                        <processor type="TrayGarden.Pipelines.Engine.Processor">
                          <Initialize hint="invoke">
                            <processorObject type="{type}"/>
                            <argumentType type="typeOf:{argType}"/>
                          </Initialize>
                        </processor>
                      </simpleProcessor>
                    </templates>
                    <items templateXPath="simpleProcessor" xpathfrom="processor"/>
                  </processors>
                </Initialize>
              </pipeline>
            </sitecoreStyle>
          </templates>

          <!-- DEFINE PIPELINES HERE -->
          <items templateXPath="sitecoreStyle">
            <pipeline name="startup" argType="TrayGarden.Pipelines.Startup.StartupArgs">
              <processor type="TrayGarden.Pipelines.Startup.SingleInstanceCheckAndHooks"/>
              <processor type="TrayGarden.Pipelines.Startup.PlantServicesInformInit"/>
              <processor type="TrayGarden.Pipelines.Startup.GardenbedInformPostServicesInit"/>
              <processor type="TrayGarden.Pipelines.Startup.PlantServicesInformDisplay"/>
              <processor type="TrayGarden.Pipelines.Startup.OpenConfigDiaglogIfNeed"/>
            </pipeline>
            <pipeline name="shutdown" argType="TrayGarden.Pipelines.Shutdown.ShutdownArgs">
              <processor type="TrayGarden.Pipelines.Shutdown.PlantServicesInformClose"/>
            </pipeline>

            <pipeline name="restartApp" argType="TrayGarden.Pipelines.RestartApp.RestartAppArgs">
              <processor type="TrayGarden.Pipelines.RestartApp.StopSingleInstanceMonitor"/>
              <processor type="TrayGarden.Pipelines.RestartApp.SimpleAppRestart"/>
            </pipeline>

            <pipeline name="initializePlant" argType="TrayGarden.Plants.Pipeline.InitializePlantArgs">
              <processor type="TrayGarden.Plants.Pipeline.ResolveIPlant"/>
              <processor type="TrayGarden.Plants.Pipeline.ResolvePlantID"/>
              <processor type="TrayGarden.Plants.Pipeline.InitializePlant"/>
              <processor type="TrayGarden.Plants.Pipeline.ValidatePlant"/>
              <processor type="TrayGarden.Plants.Pipeline.ResolveWorkhorses"/>
              <processor type="TrayGarden.Plants.Pipeline.ResolvePlantSettingBox"/>
              <processor type="TrayGarden.Plants.Pipeline.CreateIPlantEx"/>
            </pipeline>

            <!--Services plain init -->
            <pipeline name="standaloneIconServiceInitPlant" argType="TrayGarden.Services.PlantServices.StandaloneIcon.Core.InitPlantPipeline.InitPlantSIArgs">
              <processor type="TrayGarden.Services.PlantServices.StandaloneIcon.Core.InitPlantPipeline.CreateSIPlantBox"/>
              <processor type="TrayGarden.Services.PlantServices.StandaloneIcon.Core.InitPlantPipeline.CreateNotifyIcon"/>
              <processor type="TrayGarden.Services.PlantServices.StandaloneIcon.Core.InitPlantPipeline.BuildContextMenu"/>
              <processor type="TrayGarden.Services.PlantServices.StandaloneIcon.Core.InitPlantPipeline.AssignIconModifier"/>
              <processor type="TrayGarden.Services.PlantServices.StandaloneIcon.Core.InitPlantPipeline.ValidateAndAssignSIBox"/>
              <processor type="TrayGarden.Services.PlantServices.StandaloneIcon.Core.InitPlantPipeline.ResolveSettingsBox"/>
            </pipeline>

            <pipeline name="globalMenuServiceInitPlant" argType="TrayGarden.Services.PlantServices.GlobalMenu.Core.InitPlantPipeline.InitPlantGMArgs">
              <processor type="TrayGarden.Services.PlantServices.GlobalMenu.Core.InitPlantPipeline.CreatePlantBox"/>
              <processor type="TrayGarden.Services.PlantServices.GlobalMenu.Core.InitPlantPipeline.CreateSettingsBox"/>
              <processor type="TrayGarden.Services.PlantServices.GlobalMenu.Core.InitPlantPipeline.CreateContextMenuStrip"/>
              <processor type="TrayGarden.Services.PlantServices.GlobalMenu.Core.InitPlantPipeline.ProvideWithIconChanger"/>
              <processor type="TrayGarden.Services.PlantServices.GlobalMenu.Core.InitPlantPipeline.BindPlantBoxToPlant"/>
            </pipeline>

            <pipeline name="userConfigServiceInitPlant" argType="TrayGarden.Services.PlantServices.UserConfig.Pipelines.PlantInit.InitPlantUCPipelineArg">
              <processor type="TrayGarden.Services.PlantServices.UserConfig.Pipelines.PlantInit.ResolveWorkhorse"/>
              <processor type="TrayGarden.Services.PlantServices.UserConfig.Pipelines.PlantInit.ResolveSettingBox"/>
              <processor type="TrayGarden.Services.PlantServices.UserConfig.Pipelines.PlantInit.CreatePersonalSettingsSteward"/>
              <processor type="TrayGarden.Services.PlantServices.UserConfig.Pipelines.PlantInit.ProvidePlantWithSteward"/>
              <processor type="TrayGarden.Services.PlantServices.UserConfig.Pipelines.PlantInit.AssignPlantBox"/>
            </pipeline>

            <pipeline name="rareCommandsServiceInitPlant" argType="TrayGarden.Services.PlantServices.RareCommands.Pipelines.PlantInit.InitPlantRareCommandsArgs">
              <processor type="TrayGarden.Services.PlantServices.RareCommands.Pipelines.PlantInit.CollectRareCommands"/>
            </pipeline>

            <!-- UI related pipelines -->
            <pipeline name="resolveMainWindowVM" argType="TrayGarden.UI.MainWindow.ResolveVMPipeline.GetMainVMPipelineArgs">
              <processor type="TrayGarden.UI.MainWindow.ResolveVMPipeline.CreateViewModel"/>
              <processor type="TrayGarden.UI.MainWindow.ResolveVMPipeline.ResolvePlantsConfigVM"/>
              <processor type="TrayGarden.Configuration.ApplicationConfiguration.Injection.InjectApplicationConfigLink"/>
              <processor type="TrayGarden.UI.MainWindow.ResolveVMPipeline.InitializeFirstStep"/>
            </pipeline>

            <pipeline name="resolveSinglePlantVM" argType="TrayGarden.Services.PlantServices.GlobalMenu.Core.UI.ResolveSinglePlantVMPipeline.ResolveSinglePlantVMPipelineArgs">
              <processor type="TrayGarden.Services.PlantServices.GlobalMenu.Core.UI.ResolveSinglePlantVMPipeline.CreatePlantVM"/>
              <processor type="TrayGarden.Services.PlantServices.GlobalMenu.Core.UI.ResolveSinglePlantVMPipeline.StandaloneIconServicePresenter"/>
              <processor type="TrayGarden.Services.PlantServices.GlobalMenu.Core.UI.ResolveSinglePlantVMPipeline.GlobalMenuServiceMenuEmbeddingPresenter"/>
              <processor type="TrayGarden.Services.PlantServices.GlobalMenu.Core.UI.ResolveSinglePlantVMPipeline.GlobalMenuServiceIconChangePresenter"/>
              <processor type="TrayGarden.Services.PlantServices.GlobalMenu.Core.UI.ResolveSinglePlantVMPipeline.ClipboardListenerPresenter"/>
              <processor type="TrayGarden.Services.PlantServices.UserNotifications.Core.Integration.UserNotificationsPresenter"/>
              <processor type="TrayGarden.Services.PlantServices.RareCommands.UI.RareCommandsPresenter" />
              <processor type="TrayGarden.Services.PlantServices.UserConfig.UI.Intergration.UserConfigPresenter"/>
            </pipeline>

            <pipeline name="getWindowStepForUserSettingsVisual" argType="TrayGarden.Services.PlantServices.UserConfig.Pipelines.GetWindowStep.GetUCStepPipelineArgs">
              <processor type="TrayGarden.Services.PlantServices.UserConfig.Pipelines.GetWindowStep.ResolveConfigurationEntries"/>
              <processor type="TrayGarden.Services.PlantServices.UserConfig.Pipelines.GetWindowStep.ResolveContentVM"/>
              <processor type="TrayGarden.Services.PlantServices.UserConfig.Pipelines.GetWindowStep.AddResetAllHelpAction"/>
              <processor type="TrayGarden.Services.PlantServices.UserConfig.Pipelines.GetWindowStep.CreateStepInfo"/>
            </pipeline>

            <pipeline name="getStateForServicesConfiguration" argType="TrayGarden.Services.Engine.UI.GetStateForServicesConfigurationPipeline.GetStateForServicesConfigurationPipelineArgs">
              <processor type="TrayGarden.Services.Engine.UI.GetStateForServicesConfigurationPipeline.InitializeGeneralSettings"/>
              <processor type="TrayGarden.Services.Engine.UI.GetStateForServicesConfigurationPipeline.ResolveConfigurationEntries"/>
              <processor type="TrayGarden.Services.PlantServices.UserNotifications.Core.Integration.PlantServiceConfigurator"/>
              <processor type="TrayGarden.Services.Engine.UI.GetStateForServicesConfigurationPipeline.CreateConfigurationVM"/>
              <processor type="TrayGarden.Services.Engine.UI.GetStateForServicesConfigurationPipeline.MakeResetAllCommandVisible"/>
              <processor type="TrayGarden.Services.Engine.UI.GetStateForServicesConfigurationPipeline.CreateWindowWithBackState"/>
            </pipeline>

            <pipeline name="getApplicationConfigStep" argType="TrayGarden.Configuration.ApplicationConfiguration.GetApplicationConfigStepPipeline.GetApplicationConfigStepArgs">
              <processor type="TrayGarden.Configuration.ApplicationConfiguration.GetApplicationConfigStepPipeline.AssignVisibleText"/>
              <processor type="TrayGarden.Configuration.ApplicationConfiguration.GetApplicationConfigStepPipeline.AddRunAtStartupSetting"/>
              <processor type="TrayGarden.Configuration.ApplicationConfiguration.GetApplicationConfigStepPipeline.CreateConfigurationVM"/>
              <processor type="TrayGarden.Services.Engine.UI.Intergration.ServicesConfigurationInjectSAInjector"/>
              <processor type="TrayGarden.Plants.Intergration.AutoLoadAssembliesSetting"/>
              <processor type="TrayGarden.UI.WindowWithReturn.Integration.ExitOnCloseSetting"/>
              <processor type="TrayGarden.DummyTests.DummySettingInjection"/>
              <processor type="TrayGarden.Configuration.ApplicationConfiguration.GetApplicationConfigStepPipeline.CreateStep"/>
            </pipeline>

            <pipeline name="getStateForUserNotificationsUIConfiguration" argType="TrayGarden.Services.PlantServices.UserNotifications.Core.Configuration.UIInteraction.GetStepPipeline.UNConfigurationStepArgs">
              <processor type="TrayGarden.Services.PlantServices.UserNotifications.Core.Configuration.UIInteraction.GetStepPipeline.TuneConfigurationProperties"/>
              <processor type="TrayGarden.Services.PlantServices.UserNotifications.Core.Configuration.UIInteraction.GetStepPipeline.TuneWindowProperties"/>
              <processor type="TrayGarden.Services.PlantServices.UserNotifications.Core.Configuration.UIInteraction.GetStepPipeline.AddConfigurationEntries"/>
              <processor type="TrayGarden.Services.PlantServices.UserNotifications.Core.Configuration.UIInteraction.GetStepPipeline.CreateConfigurationControl"/>
              <processor type="TrayGarden.Services.PlantServices.UserNotifications.Core.Configuration.UIInteraction.GetStepPipeline.CreateStep"/>
            </pipeline>

          </items>
        </pipelines>
      </Initialize>

    </pipelineManager>

    <!-- My custom IoC bicycle :) -->
    <typeHatcherManager type="TrayGarden.TypesHatcher.HatcherManager" singleton="true">
      <Initialize hint="invoke">
        <mappings type="newlist:TrayGarden.TypesHatcher.IMapping">
          <templates>
            <instanceReferenced>
              <mapping type="TrayGarden.TypesHatcher.Mapping">
                <Initialize hint="invoke">
                  <interfaceType type="typeOf:{interface}"/>
                  <objectFactory type="TrayGarden.Configuration.SimpleObjectFactory">
                    <ConfigurationPath>{instanceRef}</ConfigurationPath>
                  </objectFactory>
                </Initialize>
              </mapping>
            </instanceReferenced>
          </templates>

          <!-- DEFINE MAPPINGS HERE -->
          <items templateXPath="instanceReferenced">
            <mapping interface="TrayGarden.Resources.IResourcesManager" instanceRef="resourceManager"/>
            <mapping interface="TrayGarden.Pipelines.Engine.IPipelineManager" instanceRef="pipelineManager"/>
            <mapping interface="TrayGarden.RuntimeSettings.IRuntimeSettingsManager" instanceRef="runtimeSettingsManager"/>
            <mapping interface="TrayGarden.Plants.IGardenbed" instanceRef="gardenbed"/>
            <mapping interface="TrayGarden.Services.Engine.IServicesSteward" instanceRef="services/servicesSteward"/>
            <mapping interface="TrayGarden.Services.FleaMarket.IconChanger.INotifyIconChangerMaster" instanceRef="bricks/notifyIconChanger"/>
            <mapping interface="TrayGarden.UI.IUIManager" instanceRef="ui/uiManager"/>
            <mapping interface="TrayGarden.UI.WindowWithReturn.IWindowWithBack" instanceRef="ui/windowWithBack"/>
            <mapping interface="TrayGarden.UI.Common.IDataTemplateSelector" instanceRef="bricks/serviceForPlantDataTemplateSelector"/>
            <mapping interface="TrayGarden.UI.Configuration.IConfigurationControlVM" instanceRef="ui/configurationControlVM"/>
            <mapping interface="TrayGarden.Configuration.ApplicationConfiguration.Autorun.IAutorunHelper" instanceRef="bricks/autorunHelper"/>
            <mapping interface="TrayGarden.Services.PlantServices.UserNotifications.Core.UI.INotificationWindow" instanceRef="ui/notificationWindow"/>
            <mapping interface="TrayGarden.Services.PlantServices.UserNotifications.Core.UI.Displaying.IUserNotificationsGate" instanceRef="bricks/userNotificationsGate"/>
            <mapping interface="TrayGarden.Helpers.ISingleInstanceMonitor" instanceRef="bricks/singleInstanceMonitor"/>
            <mapping interface="TrayGarden.UI.MainWindow.IMainWindowDisplayer" instanceRef="bricks/mainWindowDisplayer"/>
            <mapping interface="TrayGarden.Services.PlantServices.GlobalMenu.Core.DynamicState.IDynamicStateWatcher" instanceRef="bricks/globalContextMenuDynamicStateWatcher"/>
          </items>
        </mappings>
      </Initialize>
    </typeHatcherManager>


    <runtimeSettingsManager type="TrayGarden.RuntimeSettings.RuntimeSettingsManager" singleton="true">
      <!--Interval in seconds. If zero - disabled -->
      <autoSaveInterval>0</autoSaveInterval>
      <Initialize hint="invoke">
        <storageProvider type="TrayGarden.RuntimeSettings.Provider.SettingsStorage" singleton="true">
          <FileName>RuntimeSettings.xml</FileName>
          <!--If false, will use folder in ApplicationData -->
          <UseLocalFolder>true</UseLocalFolder>
          <EnableDebuggingTraces>false</EnableDebuggingTraces>
          <Initialize hint="invoke">
            <containerFactory type="objectfactory:TrayGarden.RuntimeSettings.Provider.Container"/>
          </Initialize>
        </storageProvider>
      </Initialize>
    </runtimeSettingsManager>

    <services>
      <servicesSteward type="TrayGarden.Services.Engine.ServicesSteward" singleton="true">
        <Initialize hint="invoke">
          <services type="newlist:TrayGarden.Services.IService">
            <!-- <adminConfig type="TrayGarden.Services.PlantServices.MyAdminConfig.Core.MyAdminConfigService" />-->
            <customSettings type="TrayGarden.Services.PlantServices.CustomSettings.Core.CustomSettingsService"/>
            <userConfig type="TrayGarden.Services.PlantServices.UserConfig.Core.UserConfigService"/>
            <clipboardObserver type="TrayGarden.Services.PlantServices.ClipboardObserver.Core.ClipboardObserverService"/>
            <userNotifications type="TrayGarden.Services.PlantServices.UserNotifications.Core.UserNotificationsService"/>
            <standaloneIcon type="TrayGarden.Services.PlantServices.StandaloneIcon.Core.StandaloneIconService"/>
            <globalMenu type="TrayGarden.Services.PlantServices.GlobalMenu.Core.GlobalMenuService">
              <Initialize hint="invoke">
                <contextMenuBuilder type="TrayGarden.Services.PlantServices.GlobalMenu.Core.ContextMenuCollecting.ContextMenuBuilder">
                  <BoldMainMenuEntries>False</BoldMainMenuEntries>
                  <ItalicMainMenuEntries>False</ItalicMainMenuEntries>
                  <InsertDelimiterBetweenPlants>True</InsertDelimiterBetweenPlants>
                  <ConfigureIconResourceName>configureV1</ConfigureIconResourceName>
                  <ExitIconResourceName>exitIconV1</ExitIconResourceName>
                </contextMenuBuilder>
              </Initialize>
              <TrayIconResourceName>gardenIconV2</TrayIconResourceName>
            </globalMenu>
            <rareCommands type="TrayGarden.Services.PlantServices.RareCommands.Core.RareCommandsService"/>
          </services>
        </Initialize>
      </servicesSteward>
    </services>

    <ui>
      <uiManager type="TrayGarden.UI.UIManager" singleton="true"/>

      <windowWithBack type="TrayGarden.UI.WindowWithReturn.WindowWithBack" singleton="true">
        <Initialize hint="invoke">
          <vmToVMappings type="newlist:TrayGarden.UI.Common.VMtoVMapping.IViewModelToViewMapping">
            <templates>
              <factoryBasedMapping>
                <mapping type="TrayGarden.UI.Common.VMtoVMapping.ViewModelToViewMappingFactoryBased">
                  <Initialize hint="invoke">
                    <typeFrom type="typeOf:{VMType}"></typeFrom>
                    <controlFactory type="objectfactory:{viewType}"/>
                  </Initialize>
                </mapping>
              </factoryBasedMapping>
            </templates>
            <items templateXPath="factoryBasedMapping">
              <mapping VMType="TrayGarden.Services.PlantServices.GlobalMenu.Core.UI.ViewModels.PlantsConfigVM" viewType="TrayGarden.Services.PlantServices.GlobalMenu.Core.UI.Views.PlantConfig"/>
              <mapping VMType="TrayGarden.UI.Configuration.ConfigurationControlVM" viewType="TrayGarden.UI.Configuration.ConfigurationControl"/>
            </items>
          </vmToVMappings>
        </Initialize>
        <IconResourceKey>gardenIconV3</IconResourceKey>
      </windowWithBack>

      <configurationControlVM type="TrayGarden.UI.Configuration.ConfigurationControlVM"/>

      <notificationWindow type="TrayGarden.Services.PlantServices.UserNotifications.Core.UI.NotificationWindow">
        <Initialize hint="invoke">
          <VMtoVMappings type="newlist:TrayGarden.UI.Common.VMtoVMapping.IViewModelToViewMapping">
            <templates>
              <factoryBasedMapping>
                <mapping type="TrayGarden.UI.Common.VMtoVMapping.ViewModelToViewMappingFactoryBased">
                  <Initialize hint="invoke">
                    <typeFrom type="typeOf:{VMType}"></typeFrom>
                    <controlFactory type="objectfactory:{viewType}"/>
                  </Initialize>
                </mapping>
              </factoryBasedMapping>
            </templates>
            <items templateXPath="factoryBasedMapping">
              <mapping VMType="TrayGarden.Services.PlantServices.UserNotifications.Core.UI.SpecializedNotifications.ViewModes.InformNotificationVM" viewType="TrayGarden.Services.PlantServices.UserNotifications.Core.UI.SpecializedNotifications.Controls.InformNotification"/>
              <mapping VMType="TrayGarden.Services.PlantServices.UserNotifications.Core.UI.SpecializedNotifications.ViewModes.ActionNotificationVM" viewType="TrayGarden.Services.PlantServices.UserNotifications.Core.UI.SpecializedNotifications.Controls.ActionNotification"/>
              <mapping VMType="TrayGarden.Services.PlantServices.UserNotifications.Core.UI.SpecializedNotifications.ViewModes.YesNoNotificationVM" viewType="TrayGarden.Services.PlantServices.UserNotifications.Core.UI.SpecializedNotifications.Controls.YesNoNotification"/>
            </items>
          </VMtoVMappings>
        </Initialize>
      </notificationWindow>
    </ui>


    <!-- A NODE FOR SOME SIMPLE COMPONENTS-->
    <bricks>
      <notifyIconChanger type="TrayGarden.Services.FleaMarket.IconChanger.NotifyIconChanger">
        <DefaultDelayMsec>500</DefaultDelayMsec>
      </notifyIconChanger>
      <serviceForPlantDataTemplateSelector type="TrayGarden.Services.PlantServices.GlobalMenu.Core.UI.Stuff.ServiceForPlantDataTemplateSelector" singleton="true"/>
      <autorunHelper type="TrayGarden.Configuration.ApplicationConfiguration.Autorun.AutorunHelper" singleton="true"/>
      <userNotificationsGate type="TrayGarden.Services.PlantServices.UserNotifications.Core.UI.Displaying.UserNotificationsGate" singleton="true">
        <Initialize hint="invoke">
          <TopRightCornerProvider type="TrayGarden.Services.PlantServices.UserNotifications.Core.UI.Displaying.DisplayProviders.TopRightCornerProvider"/>
        </Initialize>
      </userNotificationsGate>
      <singleInstanceMonitor type="TrayGarden.Helpers.SingleInstanceMonitor" singleton="true"/>
      <mainWindowDisplayer type="TrayGarden.UI.MainWindow.MainWindowDisplayer" singleton="true"/>
      <globalContextMenuDynamicStateWatcher type="TrayGarden.Services.PlantServices.GlobalMenu.Core.DynamicState.DynamicStateWatcher">
        <Initialize hint="invoke">
          <menuDecorator type="TrayGarden.Services.PlantServices.GlobalMenu.Core.DynamicState.DynamicStateDecorator" />
        </Initialize>
      </globalContextMenuDynamicStateWatcher>
    </bricks>

    <settings>
      <setting name="ApplicationData.FolderName" value="TrayGarden"/>
      <setting name="Gardenbed.PlantsAutodetectFolder" value=""/>
    </settings>
  </trayGarden>

  <log4net>
    <appender name="LogFileAppender" type="TrayGarden.Diagnostics.LoggingStuff.LogFileAppender">
      <param name="File" value="$(will-be-replaced-by-hardcode)"/>
      <param name="AppendToFile" value="false"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%4t %d{ABSOLUTE} %-5p %m%n"/>
      </layout>
    </appender>
    <root>
      <level value="DEBUG"/>
      <appender-ref ref="LogFileAppender"/>
    </root>
  </log4net>

  <appSettings>
    <add key="Log4net.FolderNameInAppData" value="TrayGarden"/>
    <add key="Log4net.UseAppData" value="false"/>
    <add key="Log4net.UseSingleLogFile" value="true"/>
  </appSettings>

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0,Profile=Client"/>
  </startup>
</configuration>
